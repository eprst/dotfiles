set -g prefix C-a
set -g aggressive-resize on
set -g automatic-rename on
unbind C-b
bind C-a send-prefix
bind | split-window -h
bind - split-window -v

set -g set-titles on
set -g set-titles-string '#W'
set -g history-limit 10000
set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'
# doesn't work on OSX
# set-window-option -g mode-mouse on # because it's called mouse now
set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
#set-option -gw xterm-keys on

# set window notifications
#setw -g monitor-activity on # causes powerline problems, disabled for now
set -g visual-activity on

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
# set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"
# breaks arrows keys

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# default statusbar colors
# set -g status-fg blue
# set -g status-bg default

# default window title colors
# set-window-option -g window-status-fg blue
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr dim

# active window title colors
# set-window-option -g window-status-current-fg blue
# set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr bright,underscore

# statusline
# set -g status-left '#[fg=green][ #S ]['

# set -g status-left '#[fg=green]['
# set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=yellow]%H:%M #[fg=green]]'

# join
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# move between tabs
bind-key -n -r M-Left previous-window
bind-key -n -r M-Right next-window
bind-key -n -r M-0 select-window -t 0
bind-key -n -r F1 select-window -t 1
bind-key -n -r M-2 select-window -t 2
bind-key -n -r M-3 select-window -t 3
bind-key -n -r M-4 select-window -t 4
bind-key -n -r M-5 select-window -t 5
bind-key -n -r M-6 select-window -t 6
bind-key -n -r M-7 select-window -t 7
bind-key -n -r M-8 select-window -t 8
bind-key -n -r M-9 select-window -t 9

# osx hack
# :source-file ~/.tmux-osx.conf
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'

#powerline
#if-shell 'test -z "$POWERLINE_COMMAND"' 'if-shell "which powerline-client" "set-environment -g POWERLINE_COMMAND powerline-client" "set-environment -g POWERLINE_COMMAND powerline"'
set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g status-fg colour004
set -g status-bg colour007
#doesn't work as expected...
#setw -g window-status-activity-bg black
#setw -g window-status-activity-fg yellow
set -g status-left-length 80
# set -g status-left '#[fg=colour07,bg=colour004,bold] #S #[fg=colour004,bg=colour007,nobold]#(eval $POWERLINE_COMMAND tmux left)'
set -g status-left '#[fg=colour07,bg=colour004,bold] #S #[fg=colour004,bg=colour007,nobold]'
#set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
set -g status-right ''
set -g status-right-length 50
setw -g window-status-format "#[fg=colour4,bg=colour7]#I #[fg=colour4] #[fg=colour11]#W "
setw -g window-status-current-format "#[fg=colour07,bg=colour14,nobold]#[fg=colour7,bg=colour14] #I  #[fg=colour7,bold]#W #[fg=colour14,bg=colour007,nobold]"
# vim: ft=tmux
